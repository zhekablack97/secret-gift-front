"use client";

import { motion } from "framer-motion";

import classNames from "classnames";
import { useEffect, useState } from "react";
import { usePathname, useRouter } from "next/navigation";

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

const locales = ["en", "ru"];
const page = ["authorization", "forgot-password", "registration"];

// export function generateStaticParams() {
//   return locales.map((locale) => ({ locale }));
// }

const variants = {
  open: { opacity: 1, x: 0 },
  closed: { opacity: 0, x: "-100%" },
};

export default function LocaleLayout({
  children,
  login,
  params: { locale },
}: {
  children: React.ReactNode;
  login: React.ReactNode;
  params: { locale: string };
}) {
  // unstable_setRequestLocale(locale);
  const [isOpen, setIsOpen] = useState<boolean>(false);
  const router = useRouter();

  const pathname = usePathname();

  useEffect(() => {
    const dataPathname = pathname.split("/");

    if (locales.includes(dataPathname[1]) && page.includes(dataPathname[3])) {
      setIsOpen(true);
    } else {
      setIsOpen(false);
    }
  }, [pathname]);

  const handleClose = () => {
    router.push(`/${locale}/`);
  };

  return (
    <html lang={locale}>
      <body>
        <div
          className={"flex bgIndex min-h-screen bg-no-repeat bg-cover relative"}
        >
          <div className="absolute left-0 top-0">
            <motion.div
              initial={"closed"}
              animate={isOpen ? "open" : "closed"}
              variants={variants}
              transition={{ duration: 0.5 }}
            >
              <div
                className={classNames(
                  "h-[calc(100vh_-_16px_-_16px)] mt-4 mx-4 rounded-2xl bg-white w-[calc(50vw_-_16px_-_16px)] p-4 flex items-center justify-center relative "
                )}
              >
                {children}
              </div>
            </motion.div>
          </div>
        </div>
      </body>
    </html>
  );
}
